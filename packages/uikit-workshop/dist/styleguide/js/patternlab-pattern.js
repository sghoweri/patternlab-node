/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/pattern-lab/styleguide/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/scripts/patternlab-pattern.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/clipboard/dist/clipboard.js":
/*!**************************************************!*\
  !*** ./node_modules/clipboard/dist/clipboard.js ***!
  \**************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n/*!\n * clipboard.js v2.0.1\n * https://zenorocha.github.io/clipboard.js\n * \n * Licensed MIT Â© Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (( false ? undefined : _typeof2(exports)) === 'object' && ( false ? undefined : _typeof2(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 3);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n      (function (global, factory) {\n        if (true) {\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, __webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else { var mod; }\n      })(this, function (module, _select) {\n        'use strict';\n\n        var _select2 = _interopRequireDefault(_select);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n          return _typeof2(obj);\n        } : function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n        };\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        var ClipboardAction = function () {\n          /**\n           * @param {Object} options\n           */\n          function ClipboardAction(options) {\n            _classCallCheck(this, ClipboardAction);\n\n            this.resolveOptions(options);\n            this.initSelection();\n          }\n          /**\n           * Defines base properties passed from constructor.\n           * @param {Object} options\n           */\n\n\n          _createClass(ClipboardAction, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n              var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n              this.action = options.action;\n              this.container = options.container;\n              this.emitter = options.emitter;\n              this.target = options.target;\n              this.text = options.text;\n              this.trigger = options.trigger;\n              this.selectedText = '';\n            }\n          }, {\n            key: 'initSelection',\n            value: function initSelection() {\n              if (this.text) {\n                this.selectFake();\n              } else if (this.target) {\n                this.selectTarget();\n              }\n            }\n          }, {\n            key: 'selectFake',\n            value: function selectFake() {\n              var _this = this;\n\n              var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n              this.removeFake();\n\n              this.fakeHandlerCallback = function () {\n                return _this.removeFake();\n              };\n\n              this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n              this.fakeElem = document.createElement('textarea'); // Prevent zooming on iOS\n\n              this.fakeElem.style.fontSize = '12pt'; // Reset box model\n\n              this.fakeElem.style.border = '0';\n              this.fakeElem.style.padding = '0';\n              this.fakeElem.style.margin = '0'; // Move element out of screen horizontally\n\n              this.fakeElem.style.position = 'absolute';\n              this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n              var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n              this.fakeElem.style.top = yPosition + 'px';\n              this.fakeElem.setAttribute('readonly', '');\n              this.fakeElem.value = this.text;\n              this.container.appendChild(this.fakeElem);\n              this.selectedText = (0, _select2.default)(this.fakeElem);\n              this.copyText();\n            }\n          }, {\n            key: 'removeFake',\n            value: function removeFake() {\n              if (this.fakeHandler) {\n                this.container.removeEventListener('click', this.fakeHandlerCallback);\n                this.fakeHandler = null;\n                this.fakeHandlerCallback = null;\n              }\n\n              if (this.fakeElem) {\n                this.container.removeChild(this.fakeElem);\n                this.fakeElem = null;\n              }\n            }\n          }, {\n            key: 'selectTarget',\n            value: function selectTarget() {\n              this.selectedText = (0, _select2.default)(this.target);\n              this.copyText();\n            }\n          }, {\n            key: 'copyText',\n            value: function copyText() {\n              var succeeded = void 0;\n\n              try {\n                succeeded = document.execCommand(this.action);\n              } catch (err) {\n                succeeded = false;\n              }\n\n              this.handleResult(succeeded);\n            }\n          }, {\n            key: 'handleResult',\n            value: function handleResult(succeeded) {\n              this.emitter.emit(succeeded ? 'success' : 'error', {\n                action: this.action,\n                text: this.selectedText,\n                trigger: this.trigger,\n                clearSelection: this.clearSelection.bind(this)\n              });\n            }\n          }, {\n            key: 'clearSelection',\n            value: function clearSelection() {\n              if (this.trigger) {\n                this.trigger.focus();\n              }\n\n              window.getSelection().removeAllRanges();\n            }\n          }, {\n            key: 'destroy',\n            value: function destroy() {\n              this.removeFake();\n            }\n          }, {\n            key: 'action',\n            set: function set() {\n              var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n              this._action = action;\n\n              if (this._action !== 'copy' && this._action !== 'cut') {\n                throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n              }\n            },\n            get: function get() {\n              return this._action;\n            }\n          }, {\n            key: 'target',\n            set: function set(target) {\n              if (target !== undefined) {\n                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                  if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                    throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                  }\n\n                  if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                    throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                  }\n\n                  this._target = target;\n                } else {\n                  throw new Error('Invalid \"target\" value, use a valid Element');\n                }\n              }\n            },\n            get: function get() {\n              return this._target;\n            }\n          }]);\n\n          return ClipboardAction;\n        }();\n\n        module.exports = ClipboardAction;\n      });\n      /***/\n\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var is = __webpack_require__(6);\n\n      var delegate = __webpack_require__(5);\n      /**\n       * Validates all params and calls the right\n       * listener function based on its target type.\n       *\n       * @param {String|HTMLElement|HTMLCollection|NodeList} target\n       * @param {String} type\n       * @param {Function} callback\n       * @return {Object}\n       */\n\n\n      function listen(target, type, callback) {\n        if (!target && !type && !callback) {\n          throw new Error('Missing required arguments');\n        }\n\n        if (!is.string(type)) {\n          throw new TypeError('Second argument must be a String');\n        }\n\n        if (!is.fn(callback)) {\n          throw new TypeError('Third argument must be a Function');\n        }\n\n        if (is.node(target)) {\n          return listenNode(target, type, callback);\n        } else if (is.nodeList(target)) {\n          return listenNodeList(target, type, callback);\n        } else if (is.string(target)) {\n          return listenSelector(target, type, callback);\n        } else {\n          throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n        }\n      }\n      /**\n       * Adds an event listener to a HTML element\n       * and returns a remove listener function.\n       *\n       * @param {HTMLElement} node\n       * @param {String} type\n       * @param {Function} callback\n       * @return {Object}\n       */\n\n\n      function listenNode(node, type, callback) {\n        node.addEventListener(type, callback);\n        return {\n          destroy: function destroy() {\n            node.removeEventListener(type, callback);\n          }\n        };\n      }\n      /**\n       * Add an event listener to a list of HTML elements\n       * and returns a remove listener function.\n       *\n       * @param {NodeList|HTMLCollection} nodeList\n       * @param {String} type\n       * @param {Function} callback\n       * @return {Object}\n       */\n\n\n      function listenNodeList(nodeList, type, callback) {\n        Array.prototype.forEach.call(nodeList, function (node) {\n          node.addEventListener(type, callback);\n        });\n        return {\n          destroy: function destroy() {\n            Array.prototype.forEach.call(nodeList, function (node) {\n              node.removeEventListener(type, callback);\n            });\n          }\n        };\n      }\n      /**\n       * Add an event listener to a selector\n       * and returns a remove listener function.\n       *\n       * @param {String} selector\n       * @param {String} type\n       * @param {Function} callback\n       * @return {Object}\n       */\n\n\n      function listenSelector(selector, type, callback) {\n        return delegate(document.body, selector, type, callback);\n      }\n\n      module.exports = listen;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      function E() {// Keep this empty so it's easier to inherit from\n        // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n      }\n\n      E.prototype = {\n        on: function on(name, callback, ctx) {\n          var e = this.e || (this.e = {});\n          (e[name] || (e[name] = [])).push({\n            fn: callback,\n            ctx: ctx\n          });\n          return this;\n        },\n        once: function once(name, callback, ctx) {\n          var self = this;\n\n          function listener() {\n            self.off(name, listener);\n            callback.apply(ctx, arguments);\n          }\n\n          ;\n          listener._ = callback;\n          return this.on(name, listener, ctx);\n        },\n        emit: function emit(name) {\n          var data = [].slice.call(arguments, 1);\n          var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n          var i = 0;\n          var len = evtArr.length;\n\n          for (i; i < len; i++) {\n            evtArr[i].fn.apply(evtArr[i].ctx, data);\n          }\n\n          return this;\n        },\n        off: function off(name, callback) {\n          var e = this.e || (this.e = {});\n          var evts = e[name];\n          var liveEvents = [];\n\n          if (evts && callback) {\n            for (var i = 0, len = evts.length; i < len; i++) {\n              if (evts[i].fn !== callback && evts[i].fn._ !== callback) liveEvents.push(evts[i]);\n            }\n          } // Remove event from queue to prevent memory leak\n          // Suggested by https://github.com/lazd\n          // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n\n          liveEvents.length ? e[name] = liveEvents : delete e[name];\n          return this;\n        }\n      };\n      module.exports = E;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n      (function (global, factory) {\n        if (true) {\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, __webpack_require__(0), __webpack_require__(2), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else { var mod; }\n      })(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {\n        'use strict';\n\n        var _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\n        var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\n        var _goodListener2 = _interopRequireDefault(_goodListener);\n\n        function _interopRequireDefault(obj) {\n          return obj && obj.__esModule ? obj : {\n            default: obj\n          };\n        }\n\n        var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n          return _typeof2(obj);\n        } : function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n        };\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (_typeof2(call) === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof2(superClass));\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n\n        var Clipboard = function (_Emitter) {\n          _inherits(Clipboard, _Emitter);\n          /**\n           * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n           * @param {Object} options\n           */\n\n\n          function Clipboard(trigger, options) {\n            _classCallCheck(this, Clipboard);\n\n            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n            _this.resolveOptions(options);\n\n            _this.listenClick(trigger);\n\n            return _this;\n          }\n          /**\n           * Defines if attributes would be resolved using internal setter functions\n           * or custom functions that were passed in the constructor.\n           * @param {Object} options\n           */\n\n\n          _createClass(Clipboard, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n              var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n              this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n              this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n              this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n              this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n            }\n          }, {\n            key: 'listenClick',\n            value: function listenClick(trigger) {\n              var _this2 = this;\n\n              this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                return _this2.onClick(e);\n              });\n            }\n          }, {\n            key: 'onClick',\n            value: function onClick(e) {\n              var trigger = e.delegateTarget || e.currentTarget;\n\n              if (this.clipboardAction) {\n                this.clipboardAction = null;\n              }\n\n              this.clipboardAction = new _clipboardAction2.default({\n                action: this.action(trigger),\n                target: this.target(trigger),\n                text: this.text(trigger),\n                container: this.container,\n                trigger: trigger,\n                emitter: this\n              });\n            }\n          }, {\n            key: 'defaultAction',\n            value: function defaultAction(trigger) {\n              return getAttributeValue('action', trigger);\n            }\n          }, {\n            key: 'defaultTarget',\n            value: function defaultTarget(trigger) {\n              var selector = getAttributeValue('target', trigger);\n\n              if (selector) {\n                return document.querySelector(selector);\n              }\n            }\n          }, {\n            key: 'defaultText',\n            value: function defaultText(trigger) {\n              return getAttributeValue('text', trigger);\n            }\n          }, {\n            key: 'destroy',\n            value: function destroy() {\n              this.listener.destroy();\n\n              if (this.clipboardAction) {\n                this.clipboardAction.destroy();\n                this.clipboardAction = null;\n              }\n            }\n          }], [{\n            key: 'isSupported',\n            value: function isSupported() {\n              var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n              var actions = typeof action === 'string' ? [action] : action;\n              var support = !!document.queryCommandSupported;\n              actions.forEach(function (action) {\n                support = support && !!document.queryCommandSupported(action);\n              });\n              return support;\n            }\n          }]);\n\n          return Clipboard;\n        }(_tinyEmitter2.default);\n        /**\n         * Helper function to retrieve attribute value.\n         * @param {String} suffix\n         * @param {Element} element\n         */\n\n\n        function getAttributeValue(suffix, element) {\n          var attribute = 'data-clipboard-' + suffix;\n\n          if (!element.hasAttribute(attribute)) {\n            return;\n          }\n\n          return element.getAttribute(attribute);\n        }\n\n        module.exports = Clipboard;\n      });\n      /***/\n\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports) {\n      var DOCUMENT_NODE_TYPE = 9;\n      /**\n       * A polyfill for Element.matches()\n       */\n\n      if (typeof Element !== 'undefined' && !Element.prototype.matches) {\n        var proto = Element.prototype;\n        proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector;\n      }\n      /**\n       * Finds the closest parent that matches a selector.\n       *\n       * @param {Element} element\n       * @param {String} selector\n       * @return {Function}\n       */\n\n\n      function closest(element, selector) {\n        while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n          if (typeof element.matches === 'function' && element.matches(selector)) {\n            return element;\n          }\n\n          element = element.parentNode;\n        }\n      }\n\n      module.exports = closest;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var closest = __webpack_require__(4);\n      /**\n       * Delegates event to a selector.\n       *\n       * @param {Element} element\n       * @param {String} selector\n       * @param {String} type\n       * @param {Function} callback\n       * @param {Boolean} useCapture\n       * @return {Object}\n       */\n\n\n      function _delegate(element, selector, type, callback, useCapture) {\n        var listenerFn = listener.apply(this, arguments);\n        element.addEventListener(type, listenerFn, useCapture);\n        return {\n          destroy: function destroy() {\n            element.removeEventListener(type, listenerFn, useCapture);\n          }\n        };\n      }\n      /**\n       * Delegates event to a selector.\n       *\n       * @param {Element|String|Array} [elements]\n       * @param {String} selector\n       * @param {String} type\n       * @param {Function} callback\n       * @param {Boolean} useCapture\n       * @return {Object}\n       */\n\n\n      function delegate(elements, selector, type, callback, useCapture) {\n        // Handle the regular Element usage\n        if (typeof elements.addEventListener === 'function') {\n          return _delegate.apply(null, arguments);\n        } // Handle Element-less usage, it defaults to global delegation\n\n\n        if (typeof type === 'function') {\n          // Use `document` as the first parameter, then apply arguments\n          // This is a short way to .unshift `arguments` without running into deoptimizations\n          return _delegate.bind(null, document).apply(null, arguments);\n        } // Handle Selector-based usage\n\n\n        if (typeof elements === 'string') {\n          elements = document.querySelectorAll(elements);\n        } // Handle Array-like based usage\n\n\n        return Array.prototype.map.call(elements, function (element) {\n          return _delegate(element, selector, type, callback, useCapture);\n        });\n      }\n      /**\n       * Finds closest match and invokes callback.\n       *\n       * @param {Element} element\n       * @param {String} selector\n       * @param {String} type\n       * @param {Function} callback\n       * @return {Function}\n       */\n\n\n      function listener(element, selector, type, callback) {\n        return function (e) {\n          e.delegateTarget = closest(e.target, selector);\n\n          if (e.delegateTarget) {\n            callback.call(element, e);\n          }\n        };\n      }\n\n      module.exports = delegate;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Check if argument is a HTML element.\n       *\n       * @param {Object} value\n       * @return {Boolean}\n       */\n      exports.node = function (value) {\n        return value !== undefined && value instanceof HTMLElement && value.nodeType === 1;\n      };\n      /**\n       * Check if argument is a list of HTML elements.\n       *\n       * @param {Object} value\n       * @return {Boolean}\n       */\n\n\n      exports.nodeList = function (value) {\n        var type = Object.prototype.toString.call(value);\n        return value !== undefined && (type === '[object NodeList]' || type === '[object HTMLCollection]') && 'length' in value && (value.length === 0 || exports.node(value[0]));\n      };\n      /**\n       * Check if argument is a string.\n       *\n       * @param {Object} value\n       * @return {Boolean}\n       */\n\n\n      exports.string = function (value) {\n        return typeof value === 'string' || value instanceof String;\n      };\n      /**\n       * Check if argument is a function.\n       *\n       * @param {Object} value\n       * @return {Boolean}\n       */\n\n\n      exports.fn = function (value) {\n        var type = Object.prototype.toString.call(value);\n        return type === '[object Function]';\n      };\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports) {\n      function select(element) {\n        var selectedText;\n\n        if (element.nodeName === 'SELECT') {\n          element.focus();\n          selectedText = element.value;\n        } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n          var isReadOnly = element.hasAttribute('readonly');\n\n          if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n          }\n\n          element.select();\n          element.setSelectionRange(0, element.value.length);\n\n          if (!isReadOnly) {\n            element.removeAttribute('readonly');\n          }\n\n          selectedText = element.value;\n        } else {\n          if (element.hasAttribute('contenteditable')) {\n            element.focus();\n          }\n\n          var selection = window.getSelection();\n          var range = document.createRange();\n          range.selectNodeContents(element);\n          selection.removeAllRanges();\n          selection.addRange(range);\n          selectedText = selection.toString();\n        }\n\n        return selectedText;\n      }\n\n      module.exports = select;\n      /***/\n    }])\n  );\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/clipboard/dist/clipboard.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/scripts/components/copy-to-clipboard.js":
/*!*****************************************************!*\
  !*** ./src/scripts/components/copy-to-clipboard.js ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var clipboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clipboard */ \"./node_modules/clipboard/dist/clipboard.js\");\n/* harmony import */ var clipboard__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(clipboard__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Copy to clipboard functionality for code snippet examples\n */\n\nvar clipboard = new clipboard__WEBPACK_IMPORTED_MODULE_0___default.a('.pl-js-code-copy-btn');\nclipboard.on('success', function (e) {\n  var copyButton = document.querySelectorAll('.pl-js-code-copy-btn');\n\n  for (var i = 0; i < copyButton.length; i++) {\n    copyButton[i].innerText = 'Copy';\n  }\n\n  e.trigger.textContent = 'Copied';\n});\n\n//# sourceURL=webpack:///./src/scripts/components/copy-to-clipboard.js?");

/***/ }),

/***/ "./src/scripts/components/panels-util.js":
/*!***********************************************!*\
  !*** ./src/scripts/components/panels-util.js ***!
  \***********************************************/
/*! exports provided: panelsUtil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"panelsUtil\", function() { return panelsUtil; });\n/**\n * Panels Util - for both styleguide and viewer\n */\nvar panelsUtil = {\n  /**\n   * Add click events to the template that was rendered\n   * @param  {String}      the rendered template for the modal\n   * @param  {String}      the pattern partial for the modal\n   */\n  addClickEvents: function addClickEvents(templateRendered, patternPartial) {\n    var els = templateRendered.querySelectorAll('.pl-js-tab-link');\n\n    for (var i = 0; i < els.length; ++i) {\n      els[i].onclick = function (e) {\n        e.preventDefault();\n        var partial = this.getAttribute('data-patternpartial');\n        var panelID = this.getAttribute('data-panelid');\n        panelsUtil.show(partial, panelID);\n      };\n    }\n\n    return templateRendered;\n  },\n\n  /**\n   * Show a specific modal\n   * @param  {String}      the pattern partial for the modal\n   * @param  {String}      the ID of the panel to be shown\n   */\n  show: function show(patternPartial, panelID) {\n    var activeTabClass = 'pl-is-active-tab'; // turn off all of the active tabs\n\n    var allTabLinks = document.querySelectorAll(\".pl-js-tab-link\"); // hide all of the panels\n\n    var allTabPanels = document.querySelectorAll(\".pl-js-tab-panel\"); // tabLink about to become active\n\n    var activeTabLink = document.querySelector(\"#pl-\".concat(patternPartial, \"-\").concat(panelID, \"-tab\")); // tabPanelabout to become active\n\n    var activeTabPanel = document.querySelector(\"#pl-\".concat(patternPartial, \"-\").concat(panelID, \"-panel\"));\n\n    for (var i = 0; i < allTabLinks.length; ++i) {\n      allTabLinks[i].classList.remove(activeTabClass);\n    }\n\n    for (var _i = 0; _i < allTabPanels.length; ++_i) {\n      allTabPanels[_i].classList.remove(activeTabClass);\n    }\n\n    activeTabLink.classList.add(activeTabClass);\n    activeTabPanel.classList.add(activeTabClass);\n  }\n};\n\n//# sourceURL=webpack:///./src/scripts/components/panels-util.js?");

/***/ }),

/***/ "./src/scripts/patternlab-pattern.js":
/*!*******************************************************!*\
  !*** ./src/scripts/patternlab-pattern.js + 1 modules ***!
  \*******************************************************/
/*! no exports provided */
/*! ModuleConcatenation bailout: Cannot concat with ./src/scripts/components/copy-to-clipboard.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/scripts/components/panels-util.js */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n// EXTERNAL MODULE: ./src/scripts/utils/postmessage.js\nvar postmessage = __webpack_require__(\"./src/scripts/utils/postmessage.js\");\n\n// EXTERNAL MODULE: ./src/scripts/components/panels-util.js\nvar panels_util = __webpack_require__(\"./src/scripts/components/panels-util.js\");\n\n// EXTERNAL MODULE: ./src/scripts/components/copy-to-clipboard.js\nvar copy_to_clipboard = __webpack_require__(\"./src/scripts/components/copy-to-clipboard.js\");\n\n// CONCATENATED MODULE: ./src/scripts/components/modal-styleguide.js\n/**\n * \"Modal\" (aka Panel UI) for the Styleguide Layer - for both annotations and code/info\n */\n\n\nvar modalStyleguide = {\n  // set up some defaults\n  active: [],\n  targetOrigin: window.location.protocol === 'file:' ? '*' : window.location.protocol + '//' + window.location.host,\n\n  /**\n   * initialize the modal window\n   */\n  onReady: function onReady() {\n    // go through the panel toggles and add click event to the pattern extra toggle button\n    var els = document.querySelectorAll('.pl-js-pattern-extra-toggle');\n\n    for (var i = 0; i < els.length; ++i) {\n      els[i].onclick = function (e) {\n        var patternPartial = this.getAttribute('data-patternpartial');\n        modalStyleguide.toggle(patternPartial);\n      };\n    }\n  },\n\n  /**\n   * toggle the modal window open and closed based on clicking the pip\n   * @param  {String}       the patternPartial that identifies what needs to be toggled\n   */\n  toggle: function toggle(patternPartial) {\n    if (modalStyleguide.active[patternPartial] === undefined || !modalStyleguide.active[patternPartial]) {\n      var el = document.getElementById('pl-pattern-data-' + patternPartial);\n      modalStyleguide.collectAndSend(el, true, false);\n    } else {\n      modalStyleguide.highlightsHide();\n      modalStyleguide.close(patternPartial);\n    }\n  },\n\n  /**\n   * open the modal window for a view-all entry\n   * @param  {String}       the patternPartial that identifies what needs to be opened\n   * @param  {String}       the content that should be inserted\n   */\n  open: function open(patternPartial, content) {\n    // make sure templateRendered is modified to be an HTML element\n    var div = document.createElement('div');\n    div.innerHTML = content;\n    content = document.createElement('div').appendChild(div).querySelector('div'); // add click events\n\n    content = panels_util[\"panelsUtil\"].addClickEvents(content, patternPartial); // make sure the modal viewer and other options are off just in case\n\n    modalStyleguide.close(patternPartial); // note it's turned on in the viewer\n\n    modalStyleguide.active[patternPartial] = true; // make sure there's no content\n\n    div = document.getElementById('pl-pattern-extra-' + patternPartial);\n\n    if (div.childNodes.length > 0) {\n      div.removeChild(div.childNodes[0]);\n    } // add the content\n\n\n    document.getElementById('pl-pattern-extra-' + patternPartial).appendChild(content); // show the modal\n\n    document.getElementById('pl-pattern-extra-toggle-' + patternPartial).classList.add('pl-is-active');\n    document.getElementById('pl-pattern-extra-' + patternPartial).classList.add('pl-is-active');\n  },\n\n  /**\n   * close the modal window for a view-all entry\n   * @param  {String}       the patternPartial that identifies what needs to be closed\n   */\n  close: function close(patternPartial) {\n    // note that the modal viewer is no longer active\n    modalStyleguide.active[patternPartial] = false; // hide the modal, look at info-panel.js\n\n    document.getElementById('pl-pattern-extra-toggle-' + patternPartial).classList.remove('pl-is-active');\n    document.getElementById('pl-pattern-extra-' + patternPartial).classList.remove('pl-is-active');\n  },\n\n  /**\n   * get the data that needs to be send to the viewer for rendering\n   * @param  {Element}      the identifier for the element that needs to be collected\n   * @param  {Boolean}      if the refresh is of a view-all view and the content should be sent back\n   * @param  {Boolean}      if the text in the dropdown should be switched\n   */\n  collectAndSend: function collectAndSend(el, iframePassback, switchText) {\n    /**\n     * Verify <script> tag has JSON data available (not just whitespace) - helps prevents JS errors from\n     * getting thrown when certain script tags aren't rendered with partial.patternData content.\n     */\n    if (/\\S/.test(el.innerHTML)) {\n      var patternData = JSON.parse(el.innerHTML);\n\n      if (patternData.patternName !== undefined) {\n        var patternMarkupEl = document.querySelector('#' + patternData.patternPartial + ' > .pl-js-pattern-example');\n        patternData.patternMarkup = patternMarkupEl !== null ? patternMarkupEl.innerHTML : document.querySelector('body').innerHTML;\n        modalStyleguide.patternQueryInfo(patternData, iframePassback, switchText);\n      }\n    } else {// @todo: how are we handling conditional logging for debugging based on the dev environment?\n      // console.log('This <script> tag\\'s JSON is empty for some reason...');\n    }\n  },\n\n  /**\n   * hide the annotation highlights\n   */\n  highlightsHide: function highlightsHide(patternPartial) {\n    var patternPartialSelector = patternPartial !== undefined ? '#' + patternPartial + ' > ' : '';\n    var elsToHide = document.querySelectorAll(patternPartialSelector + '.pl-has-annotation');\n\n    for (var i = 0; i < elsToHide.length; i++) {\n      elsToHide[i].classList.remove('pl-has-annotation');\n    }\n\n    elsToHide = document.querySelectorAll(patternPartialSelector + '.pl-c-annotation-tip');\n\n    for (var _i = 0; _i < elsToHide.length; _i++) {\n      elsToHide[_i].style.display = 'none';\n    }\n  },\n\n  /**\n   * return the pattern info to the top level\n   * @param  {Object}       the content that will be sent to the viewer for rendering\n   * @param  {Boolean}      if the refresh is of a view-all view and the content should be sent back\n   * @param  {Boolean}      if the text in the dropdown should be switched\n   */\n  patternQueryInfo: function patternQueryInfo(patternData, iframePassback, switchText) {\n    // send a message to the pattern\n    try {\n      var obj = JSON.stringify({\n        event: 'patternLab.patternQueryInfo',\n        patternData: patternData,\n        iframePassback: iframePassback,\n        switchText: switchText\n      });\n      window.parent.postMessage(obj, modalStyleguide.targetOrigin);\n    } catch (e) {// @todo: how do we want to handle exceptions here?\n    }\n  },\n\n  /**\n   * toggle the comment pop-up based on a user clicking on the pattern\n   * based on the great MDN docs at https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage\n   * @param  {Object}      event info\n   */\n  receiveIframeMessage: function receiveIframeMessage(event) {\n    // does the origin sending the message match the current host? if not dev/null the request\n    if (window.location.protocol !== 'file:' && event.origin !== window.location.protocol + '//' + window.location.host) {\n      return;\n    }\n\n    var data = {};\n\n    try {\n      data = typeof event.data !== 'string' ? event.data : JSON.parse(event.data);\n    } catch (e) {} // @todo: how do we want to handle exceptions here?\n    // see if it got a path to replace\n\n\n    if (data.event !== undefined && data.event === 'patternLab.patternQuery') {\n      // find all elements related to pattern info\n      var els = document.querySelectorAll('.pl-js-pattern-data');\n      var iframePassback = els.length > 1; // send each up to the parent to be read and compiled into panels\n\n      for (var i = 0; i < els.length; i++) {\n        modalStyleguide.collectAndSend(els[i], iframePassback, data.switchText);\n      }\n    } else if (data.event !== undefined && data.event === 'patternLab.patternModalInsert') {\n      // insert the previously rendered content being passed from the iframe\n      modalStyleguide.open(data.patternPartial, data.modalContent);\n    } else if (data.event !== undefined && data.event === 'patternLab.annotationsHighlightShow') {\n      var elsToHighlight, item, span; // go over the supplied annotations\n\n      for (var _i2 = 0; _i2 < data.annotations.length; _i2++) {\n        item = data.annotations[_i2];\n        elsToHighlight = document.querySelectorAll(item.el);\n\n        if (elsToHighlight.length > 0) {\n          for (var j = 0; j < elsToHighlight.length; j++) {\n            elsToHighlight[j].classList.add('pl-has-annotation');\n            span = document.createElement('span');\n            span.innerHTML = item.displayNumber;\n            span.classList.add('pl-c-annotation-tip');\n\n            if (window.getComputedStyle(elsToHighlight[j], null).getPropertyValue('max-height') === '0px') {\n              span.style.display = 'none';\n            }\n\n            var annotationTip = document.querySelector(item.el + ' > span.pl-c-annotation-tip');\n\n            if (annotationTip === null) {\n              elsToHighlight[j].insertBefore(span, elsToHighlight[j].firstChild);\n            } else {\n              annotationTip.style.display = 'inline-flex';\n            }\n\n            elsToHighlight[j].onclick = function (el) {\n              return function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var obj = JSON.stringify({\n                  event: 'patternLab.annotationNumberClicked',\n                  displayNumber: el.displayNumber\n                });\n                window.parent.postMessage(obj, modalStyleguide.targetOrigin);\n              };\n            }(item);\n          }\n        }\n      }\n    } else if (data.event !== undefined && data.event === 'patternLab.annotationsHighlightHide') {\n      modalStyleguide.highlightsHide();\n    } else if (data.event !== undefined && data.event === 'patternLab.patternModalClose') {\n      var keys = [];\n\n      for (var k in modalStyleguide.active) {\n        if (k) {\n          keys.push(k);\n        }\n      }\n\n      for (var _i3 = 0; _i3 < keys.length; _i3++) {\n        var patternPartial = keys[_i3];\n\n        if (modalStyleguide.active[patternPartial]) {\n          modalStyleguide.close(patternPartial);\n        }\n      }\n    }\n  }\n}; // when the document is ready make sure the modal is ready\n\nmodalStyleguide.onReady();\nwindow.addEventListener('message', modalStyleguide.receiveIframeMessage, false);\n// CONCATENATED MODULE: ./src/scripts/patternlab-pattern.js\n\n // WIP: new JS components for handling UI controls to toggle theme\n// import './components/toggle-theme-sg';\n\n//# sourceURL=webpack:///./src/scripts/patternlab-pattern.js_+_1_modules?");

/***/ }),

/***/ "./src/scripts/utils/postmessage.js":
/*!******************************************!*\
  !*** ./src/scripts/utils/postmessage.js ***!
  \******************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("/*!\n * Basic postMessage Support\n *\n * Copyright (c) 2013-2016 Dave Olsen, http://dmolsen.com\n * Licensed under the MIT license\n *\n * Handles the postMessage stuff in the pattern, view-all, and style guide templates.\n *\n */\n// alert the iframe parent that the pattern has loaded assuming this view was loaded in an iframe\nif (window.self !== window.top) {\n  // handle the options that could be sent to the parent window\n  //   - all get path\n  //   - pattern & view all get a pattern partial, styleguide gets all\n  //   - pattern shares lineage\n  var path = window.location.toString();\n  var parts = path.split('?');\n  var options = {\n    event: 'patternLab.pageLoad',\n    path: parts[0]\n  };\n  window.patternData = document.getElementById('pl-pattern-data-footer').innerHTML;\n  window.patternData = JSON.parse(window.patternData);\n  options.patternpartial = window.patternData.patternPartial !== undefined ? window.patternData.patternPartial : 'all';\n\n  if (window.patternData.lineage !== '') {\n    options.lineage = window.patternData.lineage;\n  }\n\n  var targetOrigin = window.location.protocol === 'file:' ? '*' : window.location.protocol + '//' + window.location.host;\n  window.parent.postMessage(options, targetOrigin); // find all links and add an onclick handler for replacing the iframe address so the history works\n\n  var aTags = document.getElementsByTagName('a');\n\n  for (var i = 0; i < aTags.length; i++) {\n    aTags[i].onclick = function (e) {\n      var href = this.getAttribute('href');\n      var target = this.getAttribute('target');\n\n      if (target !== undefined && (target === '_parent' || target === '_blank')) {// just do normal stuff\n      } else if (href && href !== '#') {\n        e.preventDefault();\n        window.location.replace(href);\n      } else {\n        e.preventDefault();\n        return false;\n      }\n\n      return true;\n    };\n  }\n} // watch the iframe source so that it can be sent back to everyone else.\n\n\nfunction receiveIframeMessage(event) {\n  // does the origin sending the message match the current host? if not dev/null the request\n  if (window.location.protocol !== 'file:' && event.origin !== window.location.protocol + '//' + window.location.host) {\n    return;\n  }\n\n  var path;\n  var data = {};\n\n  try {\n    data = typeof event.data !== 'string' ? event.data : JSON.parse(event.data);\n  } catch (e) {// @todo: how do we want to handle exceptions like these?\n  }\n\n  if (data.event !== undefined && data.event === 'patternLab.updatePath') {\n    if (window.patternData.patternPartial !== undefined) {\n      // handle patterns and the view all page\n      var re = /(patterns|snapshots)\\/(.*)$/;\n      path = window.location.protocol + '//' + window.location.host + window.location.pathname.replace(re, '') + data.path + '?' + Date.now();\n      window.location.replace(path);\n    } else {\n      // handle the style guide\n      path = window.location.protocol + '//' + window.location.host + window.location.pathname.replace('styleguide/html/styleguide.html', '') + data.path + '?' + Date.now();\n      window.location.replace(path);\n    }\n  } else if (data.event !== undefined && data.event === 'patternLab.reload') {\n    // reload the location if there was a message to do so\n    window.location.reload();\n  }\n}\n\nwindow.addEventListener('message', receiveIframeMessage, false);\n\n//# sourceURL=webpack:///./src/scripts/utils/postmessage.js?");

/***/ })

/******/ });