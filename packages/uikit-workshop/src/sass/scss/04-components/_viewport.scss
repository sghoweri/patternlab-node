/*------------------------------------*\
    #VIEWPORT
\*------------------------------------*/

/**
* To keep user code and PL code separate, and to make
* resizing the viewport possible, PL contains an iframe
* that houses all user code.
*/
pl-viewport {
  height: auto;
  height: var(--viewport-height, calc(100vh - #{$offset-top}));
  position: relative;
  display: block;
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
  width: 100%;
  height: 100%;
  overflow: hidden;

  &.is-animating {
    pointer-events: none;
  }
}

/**
* Viewport
* 1) This wrapper div occupies all remaining viewport space after PL's header
*/
.pl-c-viewport {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
  height: 100%;
  flex-grow: 1;
  position: relative;

  .pl-c-body--theme-vertical &,
  .pl-c-body--theme-sidebar & {
    @media all and (min-width: $pl-bp-med) {
      max-width: calc(100vw - 14rem);
      // left: 14rem;
    }
  }

  @supports (position: sticky) {
    top: 0;
  }
}

/**
* Cover
* 1) This is an invisible div that sits above the iframe and is
* used in JS for manual viewport resizing purposes.
*/
.pl-c-viewport__cover {
  width: 100%;
  height: 100%;
  display: none;
  position: absolute;
  z-index: 20;
  cursor: move;
}

/**
* Viewport iframe wrapper
* 1) This is the container that houses the
*    iframe and the manual resize handle
*/
.pl-c-viewport__iframe-wrapper {
  height: 100%;
  width: 100%; // bug fix for Safari and Firefox getting stuck calculating a width of 0px when the JS first kicks in
  position: relative;
  margin: 0 auto;
  // flex: 1;
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  overflow-x: hidden;
  flex-grow: 1;
  max-width: calc(100vw - -14px);

  @media all and (min-width: $pl-bp-med) {
    .pl-c-body--theme-vertical &,
    .pl-c-body--theme-sidebar & {
      max-width: calc(100vw - 14rem + 14px);
    }
  }

  &.hay-mode {
    transition: all 40s linear;
  }
  // width: 100%; // bug fix for Safari and Firefox getting stuck calculating a width of 0px when the JS first kicks in
}

/**
* Viewport iframe
* 1) this is the actual <iframe>
*/
.pl-c-viewport__iframe {
  position: absolute;
  height: 100%;
  width: 100%;
  border: 0;
  padding: 0;
  margin: 0;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: $pl-color-white;
  max-width: calc(100vw + 14px);

  @media all and (min-width: $pl-bp-med) {
    .pl-c-body--theme-vertical &,
    .pl-c-body--theme-sidebar & {
      max-width: calc(100vw - 14rem - -14px);
    }
  }

  /**
    * Hay Mode transition
    * 1) Hay Mode (disabled by default) starts with the smallest
    * viewport then slowly expands http://bradfrost.com/blog/post/ish-2-0/
    */
  &.hay-mode {
    transition: all 40s linear;
  }
}

/**
* Right pull container
* 1) Container used for manual resizing
*/
.pl-c-viewport__resizer {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 14px;
  margin: 0;
  height: 100%;
  cursor: ew-resize;
}

/**
* Right pull
* 1) This is the handle that lets the user resize the viewport
*/
.pl-c-viewport__resizer-handle {
  margin: 0;
  width: 100%;
  height: 100%;
  background: $pl-color-gray;
  transition: background $pl-animate-quick ease-out;

  &:hover {
    background: $pl-color-gray-dark;
  }

  &:active {
    cursor: move;
    background: $pl-color-gray-xdark;
  }
}

/**
* VP animate
* 1) This is an added class that is activated by JS to
*    transition the width of the viewport
*/
.vp-animate {
  transition: width 0.8s ease-out;
}
