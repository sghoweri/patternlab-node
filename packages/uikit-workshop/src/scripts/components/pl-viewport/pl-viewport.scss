/*------------------------------------*\
    #VIEWPORT
\*------------------------------------*/

/**
* To keep user code and PL code separate, and to make
* resizing the viewport possible, PL contains an iframe
* that houses all user code.
*/

pl-iframe {
  display: flex;
  flex-grow: 1;
}

/**
* Viewport
* 1) This wrapper div occupies all remaining viewport space after PL's header
*/
.pl-c-viewport {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
  top: $offset-top;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 0;
  flex-grow: 1;
  transition: height 0.3s ease;
  background-color: var(--theme-secondary);

  @supports (position: sticky) {
    top: 0;
  }

  .pl-c-body--theme-sidebar & {
    top: 0;
  }
}

/**
* Cover
* 1) This is an invisible div that sits above the iframe and is
* used in JS for manual viewport resizing purposes.
*/
.pl-c-viewport__cover {
  width: 100%;
  height: 100%;
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 200;
  cursor: move;
  pointer-events: auto; // Firefox bug fix
}

/**
* Viewport iframe wrapper
* 1) This is the container that houses the
*    iframe and the manual resize handle
*/
.pl-c-viewport__iframe-wrapper {
  display: flex;
  flex-direction: column;
  max-width: 100vw;
  width: 100%; // bug fix for Safari and Firefox getting stuck calculating a width of 0px when the JS first kicks in
  position: relative;
  margin: 0 auto;
  flex-grow: 1;
  -webkit-overflow-scrolling: touch;

  &.hay-mode {
    transition: all 40s linear;
  }
  width: 100%; // bug fix for Safari and Firefox getting stuck calculating a width of 0px when the JS first kicks in

  .pl-c-body--theme-sidebar & {
    @media all and (min-width: $pl-bp-med) {
      max-width: calc(100vw - #{$pl-sidebar-width});
    }
  }
}

/**
* Viewport iframe
* 1) this is the actual <iframe>
*/
.pl-c-viewport__iframe {
  flex-grow: 1;
  width: 100%;
  border: 0;
  padding: 0;
  margin: 0;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: $pl-color-white;
  max-width: 100vw; // https://github.com/bolt-design-system/bolt/pull/868

  &.is-ready {
    min-height: 0;
  }

  .pl-c-body--theme-sidebar & {
    @media all and (min-width: $pl-bp-med) {
      max-width: calc(100vw - #{$pl-sidebar-width});
    }
  }

  /**
    * Hay Mode transition
    * 1) Hay Mode (disabled by default) starts with the smallest
    * viewport then slowly expands http://bradfrost.com/blog/post/ish-2-0/
    */
  &.hay-mode {
    transition: all 40s linear;
  }
}

/**
* Right pull container
* 1) Container used for manual resizing
*/
.pl-c-viewport__resizer {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 14px;
  margin: 0;
  height: 100%;
  cursor: ew-resize;
}

/**
* Right pull
* 1) This is the handle that lets the user resize the viewport
*/
.pl-c-viewport__resizer-handle {
  margin: 0;
  width: 100%;
  height: 100%;
  background-color: $pl-color-gray-20;
  transition: background-color $pl-animate-quick ease-out;

  &:hover {
    background-color: $pl-color-gray-50;
  }

  &:active {
    cursor: move;
    background-color: $pl-color-gray-70;
  }
}

/**
* VP animate
* 1) This is an added class that is activated by JS to
*    transition the width of the viewport
*/
.vp-animate {
  transition: width 0.8s ease-out;
}

// wrapper so the iframe + modal can switch flex directions in vertical vs horizontal layouts
.pl-c-viewport-modal-wrapper {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  max-width: 100vw;
  position: relative; // used for absolute positioning if position sticky isn't supported

  .pl-c-body--theme-sidebar & {
    @media all and (min-width: $pl-bp-med) {
      max-width: calc(100vw - #{$pl-sidebar-width});

      // IE 11 bug causing viewport to be offset
      @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        margin-left: $pl-sidebar-width;
      }
    }
  }
}
